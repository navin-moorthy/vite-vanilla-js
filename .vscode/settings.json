{
	// Quality of life improvements
	// Git
	"git.branchProtection": ["uat"],
	"githubPullRequests.ignoredPullRequestBranches": ["uat"],

	// File Associations
	"files.associations": {
		"package.json": "json",
		"*.svg": "html",
		".env.*": "dotenv",
		"*.json": "jsonc",
		".*ignore": "ignore",
		"monorepo.code-workspace": "jsonc",
		"*.tsx": "typescriptreact",
		"*.jsx": "javascriptreact"
	},

	// File Exclusions
	"files.exclude": {
		"USE_GITIGNORE": true
	},

	// Search Exclusions
	"search.useIgnoreFiles": true,
	"search.useParentIgnoreFiles": true,
	"search.exclude": {
		// Default
		"**/node_modules": true,
		"**/bower_components": true,
		"**/*.code-search": true,
		// Custom
		"**/package-lock.json": true,
		"**/pnpm-lock.yaml": true,
		"**/yarn.lock": true,
		"**/composer.lock": true
	},

	// Editor Formatters & Linters.

	"editor.defaultFormatter": "esbenp.prettier-vscode",
	"editor.codeActionsOnSave": {
		"source.addMissingImports": "explicit",
		// "source.organizeImports": "explicit",
		// "source.sortImports": "explicit",
		// "source.fixAll": "explicit"
		"source.formatDocument": "explicit",
		"source.fixAll.eslint": "never",
		"source.fixAll.stylelint": "explicit"
	},

	// Language based settings

	// JavaScript
	"javascript.updateImportsOnFileMove.enabled": "always",
	"javascript.referencesCodeLens.enabled": true,
	"javascript.referencesCodeLens.showOnAllFunctions": true,

	// TypeScript
	"typescript.updateImportsOnFileMove.enabled": "always",
	"typescript.validate.enable": true,
	"typescript.surveys.enabled": false,

	// CSS
	"css.validate": false,
	"css.lint.unknownAtRules": "ignore",
	"less.validate": false,
	"scss.validate": false,

	// Markdown
	"markdown.validate.enabled": false,
	"markdown.editor.pasteUrlAsFormattedLink.enabled": "smart",
	"[markdown]": {
		"editor.quickSuggestions": {
			"comments": "on",
			"strings": "on",
			"other": "on"
		}
	},

	// Must have extensions config

	// Linters & Formatters
	// True by default, change to false if you want to disable prettier
	"prettier.enable": true,
	"prettier.documentSelectors": ["**/*.blade.php"],

	// True by default, change to false if you want to disable eslint
	"eslint.enable": true,
	"eslint.useESLintClass": true,
	"eslint.workingDirectories": [{ "mode": "auto" }],
	"eslint.validate": [
		"javascript",
		"javascriptreact",
		"typescript",
		"typescriptreact",
		"json",
		"jsonc",
		"json5",
		"yaml",
		"toml"
	],

	// True by default, change to false if you want to disable stylelint
	// "stylelint.enable": true,

	// Tailwind CSS
	// Detect additional class regex
	"tailwindCSS.experimental.classRegex": [
		// https://regex-vis.com/?r=%5C%5Cs*class%3A%5C%5Cs*%3F%5B%60%27%5C%22%5D%28.*%29%5B%60%27%5C%22%5D%5C%5Cs*%28%3F%3D%5B%3B%2C.%5D%29
		// Selection visualizer at https://www.debuggex.com/
		"\\s*class:\\s*?[`'\"](.*)[`'\"]\\s*(?=[;,.])",
		"\\s*=>\\s*?[`'\"](.*)[`'\"]\\s*(?=[;,.])",
		["cva\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
		["cn\\(([^)]*)\\)", "[\"'`]([^\"'`]*).*?[\"'`]"],
		"tw`([^`]*)", // tw`...`
		"tw=\"([^\"]*)", // <div tw="..." />
		"tw={\"([^\"}]*)", // <div tw={"..."} />
		"tw\\.\\w+`([^`]*)", // tw.xxx`...`
		"tw\\(.*?\\)`([^`]*)", // tw(Component)`...`
		// const fieldStyles = /*tw*/ {
		//     default: {
		//       label: 'py-2',
		//       input: 'px-3 py-2 font-medium text-sm',
		//   },
		//   inline: {
		//       label: 'py-2',
		//       input: 'px-3 py-2 font-medium text-sm',
		//   },
		// };
		["/\\* tw\\*/ ([^;]*);", "\"([^']*)\""],
		"\\/\\*\\s?tw:\\s?\\*\\/\\s?'(.*)'",
		// For javascript objects https://github.com/tailwindlabs/tailwindcss-intellisense/issues/270#issuecomment-785038799 in GridLayoutVerticals style.js
		// https://regex101.com/r/dPgaxd/1
		[":\\s{((?:.|\n)*?)},", ":\\s*[\"'`]([^'\"`]*)(?:(?:[\"'`],)|\\s\\$\\{)"],
		// For pageLayoutStyles.js
		["=\\s{((?:.|\n)*?)};", ":\\s*[\"'`]([^'\"`]*)(?:(?:[\"'`],)|\\s\\$\\{)"],
		["\\$\\{([^}]*)\\}", "(?:['\"`]([^'\"`]*)['\"`])"],
		// For twMerge
		["twMerge\\((([^)]*)\\))", "[\"'`]([^\"'`]*).*?[\"'`]"],
		"\\w+=\"([^\"]*)\""
	],
	// Enable features in languages that are not supported by default. Add a mapping here between the new language and an already supported language.
	"tailwindCSS.includeLanguages": {
		"plaintext": "html",
		"typescript": "javascript",
		"typescriptreact": "javascript",
		"javascriptreact": "javascript"
	}

	// Optional supporting extensions config
	// Error Translator for TypeScript
	// "totalTypeScript.hideAllTips": true,
	// "totalTypeScript.hideBasicTips": true,
}
